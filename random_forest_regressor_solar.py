# -*- coding: utf-8 -*-
"""Random_Forest_Regressor_Solar.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NoaiP8hz2e7mAT4GPkmBK3qszPv1Y0Hx
"""

from google.colab import files

uploaded=files.upload()

import sklearn
print(sklearn.__version__)

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score
from sklearn.ensemble import RandomForestRegressor

data = pd.read_csv('rfrsolar.csv')

X = data[['SystemSizeID', 'SystemTypeID', 'SolarPanelID', 'InverterID', 'BatteryID']]
y = data['TotalSystemCost']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2,random_state=42)

model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

#make predictions on  the testing data
y_pred = model.predict(X_test)

#evaluate the model
r2 = r2_score(y_test, y_pred)

print(f'R-squared: {r2}')

data.head(3)

# Assuming you have a new set of user input in a dictionary format
user_input = {
    'SystemSizeID': 1,
    'SystemTypeID': 1,
    'SolarPanelID': 1,
    'InverterID': 1,
    'BatteryID': 1
}

# Convert the user input to a DataFrame with a single row
user_input_df = pd.DataFrame([user_input])

# Use the trained model to predict
predicted_cost = model.predict(user_input_df)
formatted_predicted_cost = predicted_cost[0]
print(f'Total Cost: {formatted_predicted_cost}')

# Function to get user inputs
def get_user_inputs():
    user_input = {}
    user_input['SystemSizeID'] = int(input("Enter the System Size ID: "))
    user_input['SystemTypeID'] = int(input("Enter the System Type ID: "))
    user_input['SolarPanelID'] = int(input("Enter the Solar Panel ID: "))
    user_input['InverterID'] = int(input("Enter the Inverter ID: "))
    user_input['BatteryID'] = int(input("Enter the Battery ID: "))
    return pd.DataFrame([user_input])

# Getting user inputs
user_input_df = get_user_inputs()

# Using the trained model to predict
predicted_cost = model.predict(user_input_df)
formatted_predicted_cost = "{:.2f}".format(predicted_cost[0])
print(f'Total Cost:RS {formatted_predicted_cost}')

import pickle

filename = 'rfrsolar.pkl'
pickle.dump(model, open(filename, 'wb'))

from google.colab import files
files.download('rfrsolar.pkl')

